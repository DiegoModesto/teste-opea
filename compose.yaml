services:
  #web.api:
  #  image: ${DOCKER_REGISTRY-}webapi
  #  container_name: books_manager_api
  #  depends_on:
  #    - postgres
  #  build:
  #    context: .
  #    dockerfile: src/Web.API/Dockerfile
  #  ports:
  #    - "5000:8080"
  #    - "5001:8081"

  postgres:
    image: postgres:17
    container_name: books_manager_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: books_manager_rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
  
  mongodb:
    image: mongo:7
    container_name: books_manager_mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: books_manager
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express:1.0.0-20
    container_name: books_manager_mongo_express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: false
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_AUTH_USERNAME: mongo
      ME_CONFIG_MONGODB_AUTH_PASSWORD: mongo
      ME_CONFIG_BASICAUTH_USERNAME: diego
      ME_CONFIG_BASICAUTH_PASSWORD: diego
    depends_on:
      - mongodb

volumes:
  mongodb_data: